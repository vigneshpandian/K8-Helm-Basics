kubectl create namespace demo-ns

#create a secret
kubectl create secret generic demo-secret \
  --from-literal=username=admin \
  --from-literal=password=secret123 \
  -n demo-ns

#create a role that reading secrets
# save this as role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-reader
  namespace: demo-ns
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list"]

#apply the role.yaml
kubectl apply -f role.yaml

#create a service account
kubectl create serviceaccount demo-sa -n demo-ns

#bind the role to the service account
# save this as rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-secrets-binding
  namespace: demo-ns
subjects:
- kind: ServiceAccount
  name: demo-sa
  namespace: demo-ns
roleRef:
  kind: Role
  name: secret-reader
  apiGroup: rbac.authorization.k8s.io

#apply rolebinding.yaml
kubectl apply -f rolebinding.yaml

TOKEN=(kubectl create token demo-sa -n demo-ns)


kubectl auth can-i get secrets --as=system:serviceaccount:demo-ns:demo-sa -n demo-ns

